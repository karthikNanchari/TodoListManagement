#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TodoList")]
public partial class TodolistDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertTodoList_UserList(TodoList_UserList instance);
  partial void UpdateTodoList_UserList(TodoList_UserList instance);
  partial void DeleteTodoList_UserList(TodoList_UserList instance);
  partial void InsertTodoList_UsersDetail(TodoList_UsersDetail instance);
  partial void UpdateTodoList_UsersDetail(TodoList_UsersDetail instance);
  partial void DeleteTodoList_UsersDetail(TodoList_UsersDetail instance);
  #endregion
	
	public TodolistDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TodoListConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public TodolistDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TodolistDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TodolistDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TodolistDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<TodoList_UserList> TodoList_UserLists
	{
		get
		{
			return this.GetTable<TodoList_UserList>();
		}
	}
	
	public System.Data.Linq.Table<TodoList_UsersDetail> TodoList_UsersDetails
	{
		get
		{
			return this.GetTable<TodoList_UsersDetail>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeActivate")]
	public int DeActivate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailID", DbType="VarChar(50)")] string emailID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailID, isActive);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteUserList")]
	public int DeleteUserList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailId", DbType="VarChar(50)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="VarChar(50)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(50)")] string description)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId, title, description);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetArchive")]
	public ISingleResult<GetArchiveResult> GetArchive([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailId", DbType="VarChar(50)")] string emailId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId);
		return ((ISingleResult<GetArchiveResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserLists")]
	public ISingleResult<GetUserListsResult> GetUserLists([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailID", DbType="VarChar(50)")] string emailID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailID);
		return ((ISingleResult<GetUserListsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserMailIds")]
	public ISingleResult<GetUserMailIdsResult> GetUserMailIds([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), isActive);
		return ((ISingleResult<GetUserMailIdsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertNewUser")]
	public int InsertNewUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pwd", DbType="VarChar(50)")] string pwd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityQuestion", DbType="VarChar(100)")] string securityQuestion, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecurityAnswer", DbType="VarChar(50)")] string securityAnswer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone", DbType="VarChar(50)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zipcode", DbType="Int")] System.Nullable<int> zipcode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string country, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateOfBirth", DbType="VarChar(50)")] string dateOfBirth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, email, pwd, securityQuestion, securityAnswer, phone, zipcode, country, dateOfBirth, isActive);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertUserLists")]
	public int InsertUserLists([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailID", DbType="VarChar(50)")] string emailID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateOfCreation", DbType="VarChar(50)")] string dateOfCreation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="VarChar(50)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(50)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsArchive", DbType="Bit")] System.Nullable<bool> isArchive)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailID, dateOfCreation, title, description, isActive, isArchive);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ReActivate")]
	public int ReActivate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailId", DbType="VarChar(50)")] string emailId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SendToArchiveUserList")]
	public int SendToArchiveUserList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailId", DbType="VarChar(50)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="VarChar(50)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(50)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsArchive", DbType="Bit")] System.Nullable<bool> isArchive)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId, title, description, isArchive);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UnArchive")]
	public int UnArchive([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailId", DbType="VarChar(50)")] string emailId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="VarChar(50)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(50)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsArchive", DbType="Bit")] System.Nullable<bool> isArchive)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId, title, description, isArchive);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateList")]
	public int UpdateList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailID", DbType="VarChar(50)")] string emailID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleOld", DbType="VarChar(50)")] string titleOld, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleNew", DbType="VarChar(50)")] string titleNew, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(50)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateOfCreation", DbType="VarChar(50)")] string dateOfCreation)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailID, titleOld, titleNew, description, dateOfCreation);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserValidate")]
	public ISingleResult<UserValidateResult> UserValidate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailID", DbType="VarChar(50)")] string emailID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pwd", DbType="VarChar(50)")] string pwd)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailID, pwd);
		return ((ISingleResult<UserValidateResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserDetails")]
	public ISingleResult<GetUserDetailsResult> GetUserDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailID", DbType="VarChar(50)")] string emailID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailID);
		return ((ISingleResult<GetUserDetailsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IsAvailable")]
	public ISingleResult<IsAvailableResult> IsAvailable([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailID", DbType="VarChar(50)")] string emailID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailID);
		return ((ISingleResult<IsAvailableResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteCompleteLists")]
	public int DeleteCompleteLists([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailId", DbType="VarChar(50)")] string emailId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteUser")]
	public int DeleteUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailId", DbType="VarChar(50)")] string emailId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSecurityQn")]
	public ISingleResult<GetSecurityQnResult> GetSecurityQn([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailID", DbType="VarChar(50)")] string emailID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailID);
		return ((ISingleResult<GetSecurityQnResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSecurityAns")]
	public ISingleResult<GetSecurityAnsResult> GetSecurityAns([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailID", DbType="VarChar(50)")] string emailID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailID);
		return ((ISingleResult<GetSecurityAnsResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserValidateInActive")]
	public ISingleResult<UserValidateInActiveResult> UserValidateInActive([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailID", DbType="VarChar(50)")] string emailID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pwd", DbType="VarChar(50)")] string pwd)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailID, pwd);
		return ((ISingleResult<UserValidateInActiveResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserValidForgotPwd")]
	public ISingleResult<UserValidForgotPwdResult> UserValidForgotPwd([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailId", DbType="VarChar(50)")] string emailId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emailId);
		return ((ISingleResult<UserValidForgotPwdResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TodoList_UserLists")]
public partial class TodoList_UserList : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _EmailID;
	
	private System.DateTime _DateOfCreation;
	
	private string _Title;
	
	private string _Description;
	
	private bool _IsActive;
	
	private bool _IsArchive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmailIDChanging(string value);
    partial void OnEmailIDChanged();
    partial void OnDateOfCreationChanging(System.DateTime value);
    partial void OnDateOfCreationChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsArchiveChanging(bool value);
    partial void OnIsArchiveChanged();
    #endregion
	
	public TodoList_UserList()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string EmailID
	{
		get
		{
			return this._EmailID;
		}
		set
		{
			if ((this._EmailID != value))
			{
				this.OnEmailIDChanging(value);
				this.SendPropertyChanging();
				this._EmailID = value;
				this.SendPropertyChanged("EmailID");
				this.OnEmailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfCreation", DbType="Date NOT NULL")]
	public System.DateTime DateOfCreation
	{
		get
		{
			return this._DateOfCreation;
		}
		set
		{
			if ((this._DateOfCreation != value))
			{
				this.OnDateOfCreationChanging(value);
				this.SendPropertyChanging();
				this._DateOfCreation = value;
				this.SendPropertyChanged("DateOfCreation");
				this.OnDateOfCreationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchive", DbType="Bit NOT NULL")]
	public bool IsArchive
	{
		get
		{
			return this._IsArchive;
		}
		set
		{
			if ((this._IsArchive != value))
			{
				this.OnIsArchiveChanging(value);
				this.SendPropertyChanging();
				this._IsArchive = value;
				this.SendPropertyChanged("IsArchive");
				this.OnIsArchiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TodoList_UsersDetails")]
public partial class TodoList_UsersDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _EmailID;
	
	private string _Phone;
	
	private string _Pwd;
	
	private int _ZipCode;
	
	private string _Country;
	
	private System.DateTime _DateOfBirth;
	
	private string _SecurityQuestion;
	
	private string _SecurityAnswer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailIDChanging(string value);
    partial void OnEmailIDChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPwdChanging(string value);
    partial void OnPwdChanged();
    partial void OnZipCodeChanging(int value);
    partial void OnZipCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    partial void OnSecurityQuestionChanging(string value);
    partial void OnSecurityQuestionChanged();
    partial void OnSecurityAnswerChanging(string value);
    partial void OnSecurityAnswerChanged();
    #endregion
	
	public TodoList_UsersDetail()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string EmailID
	{
		get
		{
			return this._EmailID;
		}
		set
		{
			if ((this._EmailID != value))
			{
				this.OnEmailIDChanging(value);
				this.SendPropertyChanging();
				this._EmailID = value;
				this.SendPropertyChanged("EmailID");
				this.OnEmailIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Pwd
	{
		get
		{
			return this._Pwd;
		}
		set
		{
			if ((this._Pwd != value))
			{
				this.OnPwdChanging(value);
				this.SendPropertyChanging();
				this._Pwd = value;
				this.SendPropertyChanged("Pwd");
				this.OnPwdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="Int NOT NULL")]
	public int ZipCode
	{
		get
		{
			return this._ZipCode;
		}
		set
		{
			if ((this._ZipCode != value))
			{
				this.OnZipCodeChanging(value);
				this.SendPropertyChanging();
				this._ZipCode = value;
				this.SendPropertyChanged("ZipCode");
				this.OnZipCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this.OnCountryChanging(value);
				this.SendPropertyChanging();
				this._Country = value;
				this.SendPropertyChanged("Country");
				this.OnCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date NOT NULL")]
	public System.DateTime DateOfBirth
	{
		get
		{
			return this._DateOfBirth;
		}
		set
		{
			if ((this._DateOfBirth != value))
			{
				this.OnDateOfBirthChanging(value);
				this.SendPropertyChanging();
				this._DateOfBirth = value;
				this.SendPropertyChanged("DateOfBirth");
				this.OnDateOfBirthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityQuestion", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string SecurityQuestion
	{
		get
		{
			return this._SecurityQuestion;
		}
		set
		{
			if ((this._SecurityQuestion != value))
			{
				this.OnSecurityQuestionChanging(value);
				this.SendPropertyChanging();
				this._SecurityQuestion = value;
				this.SendPropertyChanged("SecurityQuestion");
				this.OnSecurityQuestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityAnswer", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string SecurityAnswer
	{
		get
		{
			return this._SecurityAnswer;
		}
		set
		{
			if ((this._SecurityAnswer != value))
			{
				this.OnSecurityAnswerChanging(value);
				this.SendPropertyChanging();
				this._SecurityAnswer = value;
				this.SendPropertyChanged("SecurityAnswer");
				this.OnSecurityAnswerChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class GetArchiveResult
{
	
	private string _Title;
	
	private string _Description;
	
	private string _DateOfCreation;
	
	public GetArchiveResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this._Title = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfCreation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string DateOfCreation
	{
		get
		{
			return this._DateOfCreation;
		}
		set
		{
			if ((this._DateOfCreation != value))
			{
				this._DateOfCreation = value;
			}
		}
	}
}

public partial class GetUserListsResult
{
	
	private string _Title;
	
	private string _Description;
	
	private string _DateOfCreation;
	
	public GetUserListsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this._Title = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfCreation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string DateOfCreation
	{
		get
		{
			return this._DateOfCreation;
		}
		set
		{
			if ((this._DateOfCreation != value))
			{
				this._DateOfCreation = value;
			}
		}
	}
}

public partial class GetUserMailIdsResult
{
	
	private string _EmailID;
	
	public GetUserMailIdsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string EmailID
	{
		get
		{
			return this._EmailID;
		}
		set
		{
			if ((this._EmailID != value))
			{
				this._EmailID = value;
			}
		}
	}
}

public partial class UserValidateResult
{
	
	private string _pwd;
	
	public UserValidateResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string pwd
	{
		get
		{
			return this._pwd;
		}
		set
		{
			if ((this._pwd != value))
			{
				this._pwd = value;
			}
		}
	}
}

public partial class GetUserDetailsResult
{
	
	private string _Name;
	
	private string _Phone;
	
	private string _Pwd;
	
	private int _ZipCode;
	
	private string _Country;
	
	private string _DateOfBirth;
	
	private string _SecurityQuestion;
	
	private string _SecurityAnswer;
	
	private bool _IsActive;
	
	public GetUserDetailsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this._Phone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Pwd
	{
		get
		{
			return this._Pwd;
		}
		set
		{
			if ((this._Pwd != value))
			{
				this._Pwd = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="Int NOT NULL")]
	public int ZipCode
	{
		get
		{
			return this._ZipCode;
		}
		set
		{
			if ((this._ZipCode != value))
			{
				this._ZipCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Country
	{
		get
		{
			return this._Country;
		}
		set
		{
			if ((this._Country != value))
			{
				this._Country = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string DateOfBirth
	{
		get
		{
			return this._DateOfBirth;
		}
		set
		{
			if ((this._DateOfBirth != value))
			{
				this._DateOfBirth = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityQuestion", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string SecurityQuestion
	{
		get
		{
			return this._SecurityQuestion;
		}
		set
		{
			if ((this._SecurityQuestion != value))
			{
				this._SecurityQuestion = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityAnswer", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string SecurityAnswer
	{
		get
		{
			return this._SecurityAnswer;
		}
		set
		{
			if ((this._SecurityAnswer != value))
			{
				this._SecurityAnswer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this._IsActive = value;
			}
		}
	}
}

public partial class IsAvailableResult
{
	
	private string _EmailID;
	
	public IsAvailableResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string EmailID
	{
		get
		{
			return this._EmailID;
		}
		set
		{
			if ((this._EmailID != value))
			{
				this._EmailID = value;
			}
		}
	}
}

public partial class GetSecurityQnResult
{
	
	private string _SecurityQuestion;
	
	public GetSecurityQnResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityQuestion", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string SecurityQuestion
	{
		get
		{
			return this._SecurityQuestion;
		}
		set
		{
			if ((this._SecurityQuestion != value))
			{
				this._SecurityQuestion = value;
			}
		}
	}
}

public partial class GetSecurityAnsResult
{
	
	private string _SecurityAnswer;
	
	public GetSecurityAnsResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityAnswer", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string SecurityAnswer
	{
		get
		{
			return this._SecurityAnswer;
		}
		set
		{
			if ((this._SecurityAnswer != value))
			{
				this._SecurityAnswer = value;
			}
		}
	}
}

public partial class UserValidateInActiveResult
{
	
	private string _pwd;
	
	public UserValidateInActiveResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string pwd
	{
		get
		{
			return this._pwd;
		}
		set
		{
			if ((this._pwd != value))
			{
				this._pwd = value;
			}
		}
	}
}

public partial class UserValidForgotPwdResult
{
	
	private string _EmailID;
	
	public UserValidForgotPwdResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string EmailID
	{
		get
		{
			return this._EmailID;
		}
		set
		{
			if ((this._EmailID != value))
			{
				this._EmailID = value;
			}
		}
	}
}
#pragma warning restore 1591
